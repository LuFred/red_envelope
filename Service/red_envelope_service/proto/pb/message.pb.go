// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

/*
Package red_envelope is a generated protocol buffer package.

It is generated from these files:
	message.proto
	service.proto

It has these top-level messages:
	ServerError
	GetCardBalanceRequest
	GetCardBalanceReply
	CreateRedeRequest
	CreateRedeReply
	CreateRecordRequest
	CreateRecordReply
	RecordData
	GetRecordByUIDRequest
	GetRecordByUIDReply
	UpdateBalanceByUIDRequest
	UpdateBalanceByUIDReply
	GetBalanceByUIDRequest
	GetBalanceByUIDReply
*/
package red_envelope

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ServerError struct {
	ErrorCode    int32  `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
}

func (m *ServerError) Reset()                    { *m = ServerError{} }
func (m *ServerError) String() string            { return proto.CompactTextString(m) }
func (*ServerError) ProtoMessage()               {}
func (*ServerError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ServerError) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *ServerError) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type GetCardBalanceRequest struct {
	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *GetCardBalanceRequest) Reset()                    { *m = GetCardBalanceRequest{} }
func (m *GetCardBalanceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetCardBalanceRequest) ProtoMessage()               {}
func (*GetCardBalanceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetCardBalanceRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type GetCardBalanceReply struct {
	Id     int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserId int32 `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Money  int32 `protobuf:"varint,3,opt,name=money" json:"money,omitempty"`
}

func (m *GetCardBalanceReply) Reset()                    { *m = GetCardBalanceReply{} }
func (m *GetCardBalanceReply) String() string            { return proto.CompactTextString(m) }
func (*GetCardBalanceReply) ProtoMessage()               {}
func (*GetCardBalanceReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetCardBalanceReply) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetCardBalanceReply) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetCardBalanceReply) GetMoney() int32 {
	if m != nil {
		return m.Money
	}
	return 0
}

type CreateRedeRequest struct {
	UserId     int32  `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	SecretCode string `protobuf:"bytes,2,opt,name=secret_code,json=secretCode" json:"secret_code,omitempty"`
	Amount     int32  `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	Count      int32  `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
}

func (m *CreateRedeRequest) Reset()                    { *m = CreateRedeRequest{} }
func (m *CreateRedeRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRedeRequest) ProtoMessage()               {}
func (*CreateRedeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateRedeRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CreateRedeRequest) GetSecretCode() string {
	if m != nil {
		return m.SecretCode
	}
	return ""
}

func (m *CreateRedeRequest) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CreateRedeRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type CreateRedeReply struct {
	Id         int32        `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserId     int32        `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	SecretCode string       `protobuf:"bytes,3,opt,name=secret_code,json=secretCode" json:"secret_code,omitempty"`
	Amount     int32        `protobuf:"varint,4,opt,name=amount" json:"amount,omitempty"`
	Count      int32        `protobuf:"varint,5,opt,name=count" json:"count,omitempty"`
	ExpireTime int64        `protobuf:"varint,6,opt,name=expire_time,json=expireTime" json:"expire_time,omitempty"`
	GmtCreate  int64        `protobuf:"varint,7,opt,name=gmt_create,json=gmtCreate" json:"gmt_create,omitempty"`
	Error      *ServerError `protobuf:"bytes,8,opt,name=error" json:"error,omitempty"`
}

func (m *CreateRedeReply) Reset()                    { *m = CreateRedeReply{} }
func (m *CreateRedeReply) String() string            { return proto.CompactTextString(m) }
func (*CreateRedeReply) ProtoMessage()               {}
func (*CreateRedeReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateRedeReply) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateRedeReply) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CreateRedeReply) GetSecretCode() string {
	if m != nil {
		return m.SecretCode
	}
	return ""
}

func (m *CreateRedeReply) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CreateRedeReply) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *CreateRedeReply) GetExpireTime() int64 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

func (m *CreateRedeReply) GetGmtCreate() int64 {
	if m != nil {
		return m.GmtCreate
	}
	return 0
}

func (m *CreateRedeReply) GetError() *ServerError {
	if m != nil {
		return m.Error
	}
	return nil
}

type CreateRecordRequest struct {
	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	RedeId int32 `protobuf:"varint,2,opt,name=rede_id,json=redeId" json:"rede_id,omitempty"`
	Amount int32 `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
}

func (m *CreateRecordRequest) Reset()                    { *m = CreateRecordRequest{} }
func (m *CreateRecordRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRecordRequest) ProtoMessage()               {}
func (*CreateRecordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateRecordRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CreateRecordRequest) GetRedeId() int32 {
	if m != nil {
		return m.RedeId
	}
	return 0
}

func (m *CreateRecordRequest) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type CreateRecordReply struct {
	Success bool         `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Error   *ServerError `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *CreateRecordReply) Reset()                    { *m = CreateRecordReply{} }
func (m *CreateRecordReply) String() string            { return proto.CompactTextString(m) }
func (*CreateRecordReply) ProtoMessage()               {}
func (*CreateRecordReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateRecordReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CreateRecordReply) GetError() *ServerError {
	if m != nil {
		return m.Error
	}
	return nil
}

type RecordData struct {
	RedeId int32 `protobuf:"varint,1,opt,name=rede_id,json=redeId" json:"rede_id,omitempty"`
	Amount int32 `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Time   int64 `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
}

func (m *RecordData) Reset()                    { *m = RecordData{} }
func (m *RecordData) String() string            { return proto.CompactTextString(m) }
func (*RecordData) ProtoMessage()               {}
func (*RecordData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RecordData) GetRedeId() int32 {
	if m != nil {
		return m.RedeId
	}
	return 0
}

func (m *RecordData) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *RecordData) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type GetRecordByUIDRequest struct {
	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *GetRecordByUIDRequest) Reset()                    { *m = GetRecordByUIDRequest{} }
func (m *GetRecordByUIDRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRecordByUIDRequest) ProtoMessage()               {}
func (*GetRecordByUIDRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetRecordByUIDRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type GetRecordByUIDReply struct {
	Data []*RecordData `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *GetRecordByUIDReply) Reset()                    { *m = GetRecordByUIDReply{} }
func (m *GetRecordByUIDReply) String() string            { return proto.CompactTextString(m) }
func (*GetRecordByUIDReply) ProtoMessage()               {}
func (*GetRecordByUIDReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetRecordByUIDReply) GetData() []*RecordData {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateBalanceByUIDRequest struct {
	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Amount int32 `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *UpdateBalanceByUIDRequest) Reset()                    { *m = UpdateBalanceByUIDRequest{} }
func (m *UpdateBalanceByUIDRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateBalanceByUIDRequest) ProtoMessage()               {}
func (*UpdateBalanceByUIDRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *UpdateBalanceByUIDRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UpdateBalanceByUIDRequest) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type UpdateBalanceByUIDReply struct {
	Success bool         `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Error   *ServerError `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *UpdateBalanceByUIDReply) Reset()                    { *m = UpdateBalanceByUIDReply{} }
func (m *UpdateBalanceByUIDReply) String() string            { return proto.CompactTextString(m) }
func (*UpdateBalanceByUIDReply) ProtoMessage()               {}
func (*UpdateBalanceByUIDReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *UpdateBalanceByUIDReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *UpdateBalanceByUIDReply) GetError() *ServerError {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetBalanceByUIDRequest struct {
	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *GetBalanceByUIDRequest) Reset()                    { *m = GetBalanceByUIDRequest{} }
func (m *GetBalanceByUIDRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBalanceByUIDRequest) ProtoMessage()               {}
func (*GetBalanceByUIDRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *GetBalanceByUIDRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type GetBalanceByUIDReply struct {
	UserId  int32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Balance int32 `protobuf:"varint,2,opt,name=balance" json:"balance,omitempty"`
}

func (m *GetBalanceByUIDReply) Reset()                    { *m = GetBalanceByUIDReply{} }
func (m *GetBalanceByUIDReply) String() string            { return proto.CompactTextString(m) }
func (*GetBalanceByUIDReply) ProtoMessage()               {}
func (*GetBalanceByUIDReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *GetBalanceByUIDReply) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetBalanceByUIDReply) GetBalance() int32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func init() {
	proto.RegisterType((*ServerError)(nil), "red_envelope.ServerError")
	proto.RegisterType((*GetCardBalanceRequest)(nil), "red_envelope.GetCardBalanceRequest")
	proto.RegisterType((*GetCardBalanceReply)(nil), "red_envelope.GetCardBalanceReply")
	proto.RegisterType((*CreateRedeRequest)(nil), "red_envelope.CreateRedeRequest")
	proto.RegisterType((*CreateRedeReply)(nil), "red_envelope.CreateRedeReply")
	proto.RegisterType((*CreateRecordRequest)(nil), "red_envelope.CreateRecordRequest")
	proto.RegisterType((*CreateRecordReply)(nil), "red_envelope.CreateRecordReply")
	proto.RegisterType((*RecordData)(nil), "red_envelope.RecordData")
	proto.RegisterType((*GetRecordByUIDRequest)(nil), "red_envelope.GetRecordByUIDRequest")
	proto.RegisterType((*GetRecordByUIDReply)(nil), "red_envelope.GetRecordByUIDReply")
	proto.RegisterType((*UpdateBalanceByUIDRequest)(nil), "red_envelope.UpdateBalanceByUIDRequest")
	proto.RegisterType((*UpdateBalanceByUIDReply)(nil), "red_envelope.UpdateBalanceByUIDReply")
	proto.RegisterType((*GetBalanceByUIDRequest)(nil), "red_envelope.GetBalanceByUIDRequest")
	proto.RegisterType((*GetBalanceByUIDReply)(nil), "red_envelope.GetBalanceByUIDReply")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0xed, 0x24, 0x6e, 0x26, 0x2d, 0x88, 0x6d, 0x69, 0xb6, 0x07, 0x84, 0xb5, 0x5c, 0x7c,
	0x40, 0x01, 0xca, 0x1f, 0x34, 0x45, 0x55, 0x24, 0x38, 0xd4, 0xb4, 0x57, 0xac, 0xad, 0x77, 0x14,
	0x59, 0x8a, 0xb3, 0x66, 0xbd, 0xa9, 0x88, 0xf8, 0x73, 0x4e, 0x68, 0x77, 0x1d, 0xb2, 0x29, 0x0d,
	0x69, 0x24, 0x6e, 0x9e, 0xf1, 0xcc, 0x9b, 0xf7, 0xde, 0x78, 0x0c, 0x47, 0x15, 0x36, 0x0d, 0x9f,
	0xe2, 0xa8, 0x56, 0x52, 0x4b, 0x72, 0xa8, 0x50, 0xe4, 0x38, 0xbf, 0xc7, 0x99, 0xac, 0x91, 0x5d,
	0xc3, 0xe0, 0x2b, 0xaa, 0x7b, 0x54, 0x9f, 0x94, 0x92, 0x8a, 0xbc, 0x02, 0x40, 0xf3, 0x90, 0x17,
	0x52, 0x20, 0x0d, 0x92, 0x20, 0xed, 0x66, 0x7d, 0x9b, 0x19, 0x4b, 0x81, 0xe4, 0x0d, 0x1c, 0xb9,
	0xd7, 0x2d, 0x24, 0x0d, 0x93, 0x20, 0xed, 0x67, 0x87, 0x36, 0xf9, 0xc5, 0xe5, 0xd8, 0x7b, 0x78,
	0x79, 0x85, 0x7a, 0xcc, 0x95, 0xb8, 0xe0, 0x33, 0x3e, 0x2f, 0x30, 0xc3, 0xef, 0x0b, 0x6c, 0x34,
	0x19, 0x42, 0xbc, 0x68, 0x50, 0xe5, 0xa5, 0x68, 0x91, 0x7b, 0x26, 0x9c, 0x08, 0x76, 0x03, 0xc7,
	0x0f, 0x3b, 0xea, 0xd9, 0x92, 0x3c, 0x83, 0xf0, 0x4f, 0x69, 0x58, 0x0a, 0xbf, 0x3f, 0xf4, 0xfb,
	0xc9, 0x09, 0x74, 0x2b, 0x39, 0xc7, 0x25, 0x8d, 0x6c, 0xda, 0x05, 0xec, 0x27, 0xbc, 0x18, 0x2b,
	0xe4, 0x1a, 0x33, 0x14, 0x3b, 0x39, 0x90, 0xd7, 0x30, 0x68, 0xb0, 0x50, 0xa8, 0x9d, 0x74, 0x27,
	0x0c, 0x5c, 0xca, 0x6a, 0x3f, 0x85, 0x1e, 0xaf, 0xe4, 0x62, 0xae, 0xdb, 0x29, 0x6d, 0x64, 0x86,
	0x17, 0x36, 0xdd, 0x71, 0xc3, 0x6d, 0xc0, 0x7e, 0x05, 0xf0, 0xdc, 0x9f, 0xbe, 0x97, 0x9e, 0x07,
	0x5c, 0xa2, 0x7f, 0x70, 0xe9, 0x3c, 0xce, 0xa5, 0xeb, 0x71, 0x31, 0x70, 0xf8, 0xa3, 0x2e, 0x15,
	0xe6, 0xba, 0xac, 0x90, 0xf6, 0x92, 0x20, 0x8d, 0x32, 0x70, 0xa9, 0x9b, 0xb2, 0x42, 0xb3, 0xf5,
	0x69, 0xa5, 0xf3, 0xc2, 0xf2, 0xa5, 0xb1, 0x7d, 0xdf, 0x9f, 0x56, 0xda, 0x09, 0x20, 0xef, 0xa0,
	0x6b, 0x17, 0x4c, 0x0f, 0x92, 0x20, 0x1d, 0x9c, 0x9f, 0x8d, 0xfc, 0x2f, 0x68, 0xe4, 0x7d, 0x3e,
	0x99, 0xab, 0x63, 0x39, 0x1c, 0xaf, 0xb4, 0x17, 0x52, 0x89, 0x9d, 0xde, 0x0f, 0x21, 0x56, 0x28,
	0xd0, 0x33, 0xc2, 0x84, 0x13, 0xb1, 0xcd, 0x73, 0xf6, 0x6d, 0xbd, 0x5a, 0x37, 0xc0, 0xd8, 0x4b,
	0x21, 0x6e, 0x16, 0x45, 0x81, 0x4d, 0x63, 0xe1, 0x0f, 0xb2, 0x55, 0xb8, 0x16, 0x10, 0x3e, 0x51,
	0xc0, 0x35, 0x80, 0x43, 0xbe, 0xe4, 0x9a, 0xfb, 0xf4, 0x82, 0x2d, 0xf4, 0xc2, 0x8d, 0x35, 0x10,
	0xe8, 0x58, 0xa7, 0x23, 0xeb, 0xa4, 0x7d, 0x6e, 0xaf, 0xc2, 0xa1, 0x5e, 0x2c, 0x6f, 0x27, 0x97,
	0x3b, 0xaf, 0x62, 0x6c, 0xaf, 0x62, 0xa3, 0xc3, 0xc8, 0x7c, 0x0b, 0x1d, 0xc1, 0x35, 0xa7, 0x41,
	0x12, 0xa5, 0x83, 0x73, 0xba, 0xa9, 0x65, 0xcd, 0x3a, 0xb3, 0x55, 0xec, 0x33, 0x9c, 0xdd, 0xd6,
	0x82, 0x6b, 0x6c, 0x2f, 0xeb, 0x49, 0xa3, 0xb7, 0x09, 0x63, 0x02, 0x86, 0x8f, 0xa1, 0xfd, 0x67,
	0xf7, 0x3f, 0xc0, 0xe9, 0x15, 0xea, 0x7d, 0x08, 0xb3, 0x09, 0x9c, 0xfc, 0xd5, 0x62, 0x58, 0x6d,
	0x55, 0x48, 0x21, 0xbe, 0x73, 0xd5, 0xad, 0xc4, 0x55, 0x78, 0xd7, 0xb3, 0xbf, 0xc9, 0x8f, 0xbf,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xda, 0x01, 0x23, 0xc6, 0x37, 0x05, 0x00, 0x00,
}
